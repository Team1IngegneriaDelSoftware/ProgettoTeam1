// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.core.RotationData in improbable/core/Rotation.schema.

namespace Improbable.Core
{

public partial struct RotationData : global::System.IEquatable<RotationData>, global::Improbable.Collections.IDeepCopyable<RotationData>
{
  /// <summary>
  /// Field rotation = 1.
  /// </summary>
  public global::Improbable.Core.Quaternion rotation;

  public RotationData(global::Improbable.Core.Quaternion rotation)
  {
    this.rotation = rotation;
  }

  public static RotationData Create()
  {
    var _result = new RotationData();
    _result.rotation = global::Improbable.Core.Quaternion.Create();
    return _result;
  }

  public RotationData DeepCopy()
  {
    var _result = new RotationData();
    _result.rotation = rotation.DeepCopy();
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is RotationData && Equals((RotationData) _obj);
  }

  public static bool operator==(RotationData a, RotationData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(RotationData a, RotationData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(RotationData _obj)
  {
    return
        rotation == _obj.rotation;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + rotation.GetHashCode();
    return _result;
  }
}

public static class RotationData_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.PbioHandlePool _pool,
                                  RotationData _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      global::Improbable.Core.Quaternion_Internal.Write(_pool, _data.rotation, global::Improbable.Worker.Internal.Pbio.AddObject(_obj, 1));
    }
  }

  public static unsafe RotationData Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    RotationData _data;
    {
      _data.rotation = global::Improbable.Core.Quaternion_Internal.Read(global::Improbable.Worker.Internal.Pbio.GetObject(_obj, 1));
    }
    return _data;
  }
}

}
